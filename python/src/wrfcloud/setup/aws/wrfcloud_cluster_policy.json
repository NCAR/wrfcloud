{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "iam:PassRole",
            "Resource": "arn:aws:iam::__AWS_ACCOUNT_ID__:role/parallelcluster/*",
            "Condition": {
                "StringEqualsIfExists": {
                    "iam:PassedToService": [
                        "lambda.amazonaws.com",
                        "ec2.amazonaws.com",
                        "spotfleet.amazonaws.com"
                    ]
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "lambda:CreateFunction",
                "lambda:TagResource",
                "secretsmanager:DescribeSecret",
                "dynamodb:ListTagsOfResource",
                "lambda:GetFunctionConfiguration",
                "dynamodb:DeleteTable",
                "lambda:UntagResource",
                "ses:SendEmail",
                "iam:SimulatePrincipalPolicy",
                "dynamodb:TagResource",
                "dynamodb:DescribeTable",
                "lambda:ListTags",
                "dynamodb:GetItem",
                "lambda:DeleteFunction",
                "iam:GetRole",
                "iam:GetInstanceProfile",
                "iam:GetPolicy",
                "dynamodb:PutItem",
                "lambda:InvokeFunction",
                "lambda:GetFunction",
                "ses:SendRawEmail",
                "lambda:UpdateFunctionConfiguration",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
                "dynamodb:CreateTable",
                "lambda:AddPermission",
                "iam:GetRolePolicy",
                "lambda:RemovePermission"
            ],
            "Resource": [
                "arn:aws:iam::__AWS_ACCOUNT_ID__:role/*",
                "arn:aws:iam::__AWS_ACCOUNT_ID__:policy/*",
                "arn:aws:iam::aws:policy/*",
                "arn:aws:iam::__AWS_ACCOUNT_ID__:instance-profile/*",
                "arn:aws:dynamodb:*:__AWS_ACCOUNT_ID__:table/*",
                "arn:aws:ses:us-east-2:__AWS_ACCOUNT_ID__:identity/*",
                "arn:aws:ses:us-east-2:__AWS_ACCOUNT_ID__:configuration-set/*",
                "arn:aws:secretsmanager:us-east-2:__AWS_ACCOUNT_ID__:secret:*",
                "arn:aws:lambda:*:__AWS_ACCOUNT_ID__:function:parallelcluster-*",
                "arn:aws:lambda:*:__AWS_ACCOUNT_ID__:function:pcluster-*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:CreateInstanceProfile",
                "iam:DeleteInstanceProfile",
                "iam:DetachRolePolicy",
                "iam:DeleteRolePolicy",
                "iam:RemoveRoleFromInstanceProfile",
                "iam:DeleteRole",
                "iam:AddRoleToInstanceProfile"
            ],
            "Resource": [
                "arn:aws:iam::__AWS_ACCOUNT_ID__:role/*",
                "arn:aws:iam::__AWS_ACCOUNT_ID__:instance-profile/parallelcluster/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "cloudwatch:PutDashboard",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:ModifyVolumeAttribute",
                "route53:GetHostedZone",
                "ec2:DeleteVolume",
                "ec2:CreatePlacementGroup",
                "ec2:RevokeSecurityGroupEgress",
                "cloudwatch:ListDashboards",
                "logs:GetLogEvents",
                "route53:ListResourceRecordSets",
                "logs:FilterLogEvents",
                "ec2:ModifyVolume",
                "cloudwatch:GetDashboard",
                "route53:CreateHostedZone",
                "ec2:CreateTags",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:DeleteNetworkInterface",
                "route53:ChangeResourceRecordSets",
                "cloudformation:*",
                "ec2:RunInstances",
                "ec2:CreateFleet",
                "logs:CreateLogGroup",
                "ec2:CreateVolume",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:CreateNetworkInterface",
                "logs:DescribeExportTasks",
                "route53:ChangeTagsForResource",
                "resource-groups:ListGroupResources",
                "ec2:AssociateAddress",
                "ec2:DisassociateAddress",
                "route53:GetChange",
                "logs:DescribeLogStreams",
                "route53:ListQueryLoggingConfigs",
                "logs:CreateExportTask",
                "cloudwatch:DeleteDashboards",
                "ec2:CreateSecurityGroup",
                "ec2:CreateSnapshot",
                "route53:DeleteHostedZone",
                "ec2:ReleaseAddress",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:DeleteLaunchTemplate",
                "ec2:TerminateInstances",
                "ec2:DeletePlacementGroup",
                "logs:DescribeLogGroups",
                "logs:DeleteLogGroup",
                "ec2:AllocateAddress",
                "ec2:CreateLaunchTemplateVersion",
                "ec2:Describe*",
                "ec2:CreateLaunchTemplate",
                "ec2:DeleteSecurityGroup",
                "ec2:ModifyLaunchTemplate",
                "ec2:AttachNetworkInterface",
                "logs:PutRetentionPolicy"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": [
                "arn:aws:s3:::parallelcluster-*",
                "arn:aws:s3:::aws-parallelcluster-*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:Get*",
                "s3:List*"
            ],
            "Resource": "arn:aws:s3:::*-aws-parallelcluster*"
        },
        {
            "Effect": "Allow",
            "Action": "elasticfilesystem:*",
            "Resource": "arn:aws:elasticfilesystem:*:__AWS_ACCOUNT_ID__:*"
        }
    ]
}
